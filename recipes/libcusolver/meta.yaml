{% set name = "libcusolver" %}
{% set version = "11.4.2.57" %}
{% set cuda_version = "12.0" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]
{% set major_version = version.split(".")[0] %}
{% set minor_version = version.split(".")[0] %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: c9460db500d0c7d14debb2c8e0d88fc26a39197363f1b000ccf760866f636f12  # [linux64]
  sha256: bf3c9a090652d011aafe2190c6f26fe108194cf8512d3c571e406054740168bb  # [ppc64le]
  sha256: 0ca46b73520657f96f921711c05af7053bd398328d510aecddfff2521c000e91  # [aarch64]
  sha256: c09836df1f43a3496f2b61ad8827af662ace298508869564a40c30d909ba550f  # [win]

build:
  number: 0
  skip: true  # [osx]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}

outputs:
  - name: libcusolver
    requirements:
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - libcublas
        - libnvjitlink
    files:
      - lib/libcusolver*.so.*            # [linux]
      - targets/*/lib/libcusolver*.so.*  # [linux]
      - Library\bin                      # [win]
    test:
       commands:
         - test -f $PREFIX/lib/libcusolver.so  # [unix]
         - test -f $PREFIX/lib/libcusolverMg.so  # [unix]
         - if not exist %LIBRARY_LIB%\\cusolver.lib exit 1  # [win]
         - if not exist %LIBRARY_LIB%\\cusolverMg.lib exit 1  # [win]

  - name: libcusolver-dev
    requirements:
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - libcusolver >={{ version }}
    files:
      - lib/libcusolver*.so               # [linux]
      - targets/*/lib/libcusolver*.so     # [linux]
      - lib/stubs/libcusolver*            # [linux]
      - targets/*/lib/stubs/libcusolver*  # [linux]
      - include/cusolver*                 # [linux]
      - targets/*/include/cusolver*       # [linux]
      - Library\include                   # [win]
      - Library\lib                       # [win]
    test:
      commands:
        - test -f $PREFIX/include/cusolverDn.h  # [linux]
        - test -f $PREFIX/include/cusolverMg.h  # [linux]
        - test -f $PREFIX/include/cusolverRf.h  # [linux]
        - test -f $PREFIX/include/cusolverSp.h  # [linux]
        - test -f $PREFIX/include/cusolverSp_LOWLEVEL_PREVIEW.h  # [linux]
        - test -f $PREFIX/include/cusolver_common.h  # [linux]
        - if not exist %LIBRARY_INC%\\cusolverDn.h exit 1  # [win]
        - if not exist %LIBRARY_INC%\\cusolverMg.h exit 1  # [win]
        - if not exist %LIBRARY_INC%\\cusolverRf.h exit 1  # [win]
        - if not exist %LIBRARY_INC%\\cusolverSp.h exit 1  # [win]
        - if not exist %LIBRARY_INC%\\cusolverSp_LOWLEVEL_PREVIEW.h exit 1  # [win]
        - if not exist %LIBRARY_INC%\\cusolver_common.h exit 1  # [win]

  - name: libcusolver-static
    build:
      skip: True  # [not linux]
    requirements:
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - libcusolver-dev >={{ version }}
    files:
      - lib/libcusolver*_static.a
    test:
      commands:
        - test -f $PREFIX/lib/libcusolver_static.a  # [linux]
        - test -f $PREFIX/lib/libcusolver_lapack_static.a  # [linux]
        - if not exist %LIBRARY_LIB%\\cusolver_static.lib  # [win]
        - if not exist %LIBRARY_LIB%\\cusolver_lapack_static.lib  # [win]

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: CUDA solver native runtime libraries
  description: |
    CUDA solver native runtime libraries
  doc_url: https://docs.nvidia.com/cuda/index.html

extra:
  recipe-maintainers:
    - adibbley
