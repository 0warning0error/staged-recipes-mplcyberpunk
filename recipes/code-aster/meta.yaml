{% set name = "aster" %}
{% set version = "14.6" %}
{% set minor_version = "11" %}
{% set sha256 = "107ed98d10bc05866bdb3053f088fb0f51276ea14f7b615ec0d410a4b147ef12" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}_{{ version }}.{{ minor_version }}.tar.gz
  url: https://gitlab.com/codeaster/src/-/archive/{{ version }}.{{ minor_version }}/src-{{ version }}.{{ minor_version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  skip: true  # [py2k or osx or win or (python_impl == 'pypy')]
  detect_binary_files_with_prefix: True
  ignore_run_exports:
      - libstdcxx-ng
      - libgcc-ng
      - gettext
  #has_prefix_files:
    #- {{ version }}/share/aster/profile.sh
    #- etc/codeaster/profile.sh
    #- share/aster/config.txt

requirements:
  build:
    - gcc 8  # [linux]
    - gxx 8  # [linux]
    - gfortran 8  # [linux]
    - sysroot_linux-64 =2.17
  host:
    - cmake  
    - make
    - bison 
    - flex 
    - swig 
    - gettext  
    #- tk   
    #- boost 1.75
    - python 3.9
    - numpy 1.20
    - mfront 3.2
    - metis-aster 5.1    
    - mumps-aster 5.1   
    - libgomp
#    - superlu
#    - aspell
    - libmed 4.0
    - hdf5 1.10.6
    - scotch
    - libblas
    - liblapack
    #- libopenblas
    - zlib          

  run:
    - python
    - {{ pin_compatible('numpy', max_pin='x.x') }}
    - {{ pin_compatible('boost', max_pin='x.x') }}
    - {{ pin_compatible('libmed', max_pin='x.x') }}
    - {{ pin_compatible('hdf5', max_pin='x.x') }}
    - {{ pin_compatible('scotch', max_pin='x.x') }}  
    - libgomp    
    - {{ pin_compatible('metis-aster', max_pin='x.x') }}
    - {{ pin_compatible('mumps-aster', max_pin='x.x') }}
 #   - {{ pin_compatible('mumps-seq', max_pin='x.x.x') }}


test:
  imports:
     - asrun
#    - code_aster

about:
  home: https://www.code-aster.org
  license: GPL-3.0-only
  license_family: GPL
  license_file: LICENSE.txt
  summary: 'Code_Aster : a finite element solver'
  description: |
    Code_Aster offers a full range of multiphysical analysis and modelling methods that go well beyond the standard functions of a thermomechanical calculation code: from seismic analysis to porous media via acoustics, fatigue, stochastic dynamics, etc..
  doc_url: https://www.code-aster.org/V2/doc/default/en/index.php?man=commande
  dev_url: https://sourceforge.net/projects/codeaster/

extra:
  recipe-maintainers:
    - ldallolio
