{% set name = "libcublas" %}
{% set version = "12.0.1.189" %}
{% set cuda_version = "12.0" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: 38272cc9184b4a57a6250fc2cd914ffc827f9f8cd5a3e1356bc3c31f843caf8f  # [linux64]
  sha256: 2d46e735f8e76e2eb7df1b4f41d56aa8d5d2683f99988bac82d6ae33fb6d344b  # [ppc64le]
  sha256: 96b68f6821684f39f338862639ce74a74c75830bf44dcd17ef372a1cb8c2304d  # [aarch64]
  sha256: 88f29bec81880844da2eee13f1cdc51e1ccd8b4c60af6df633577810b30f80d0  # [win]

build:
  number: 0
  skip: true  # [osx]

requirements:
  build:
    - {{ compiler("c") }}
    - {{ compiler("cxx") }}
    - sysroot_{{ target_platform }} 2.17   # [linux]

outputs:
  - name: libcublas
    requirements:
      host:
         - cuda-version {{ cuda_version }}
      run:
         - {{ pin_compatible("cuda-version", max_pin="x.x") }}
    files:
      - lib/lib*blas*.so.*            # [linux]
      - targets/*/lib/lib*blas*.so.*  # [linux]
      - Library\bin\cublas*.dll                   # [win]
      - Library\bin\nvblas*.dll                   # [win]
    test:
      commands:
        - test -f $PREFIX/lib/libcublas.so.*  # [unix]
        - if not exist %LIBRARY_LIB%\\cublas.lib exit 1  # [win]

  - name: libcublas-dev
    build:
      run_exports:
        - {{ pin_subpackage("libcublas", max_pin="x") }}
    requirements:
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - libcublas >={{ version }}
      run_constrained:
        - libcublas-static >={{ version }}
    files:
      - lib/lib*blas*.so            # [linux]
      - targets/*/lib/lib*blas*.so  # [linux]
      - lib/stubs                   # [linux]
      - include                     # [linux]
      - targets/*/include/*         # [linux]
      - lib/pkgconfig               # [linux]
      - src
      - Library\include             # [win]
      - Library\lib                 # [win]
    test:
      commands:
        - test -L $PREFIX/lib/libcublas.so  # [unix]
        - test -f $PREFIX/include/cublas.h  # [unix]
        - if not exist %LIBRARY_LIB%\\cublas.lib exit 1  # [win]
        - if not exist %LIBRARY_INC%\\cublas.h exit 1  # [win]

  - name: libcublas-static
    build:
      skip: True  # [not linux]
    requirements:
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
    files:
      - lib/lib*blas*_static.a
      - targets/*/lib/lib*blas*_static.a
    test:
      commands:
        - test -f $PREFIX/lib/libcublas_static.a  # [unix]
        - if not exist %LIBRARY_LIB%\\cublas.lib exit 1  # [win]

about:
  home: https://developer.nvidia.com/cublas
  # Uses `LicenseRef-*` per this discussion:
  # https://github.com/conda-forge/staged-recipes/pull/12882#discussion_r504086944
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_file: LICENSE
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: An implementation of BLAS (Basic Linear Algebra Subprograms) on top of the NVIDIA CUDA runtime.
  description: |
    The cuBLAS Library provides a GPU-accelerated implementation of the basic linear algebra subroutines (BLAS).
  doc_url: https://docs.nvidia.com/cuda/cublas/

extra:
  recipe-maintainers:
    - adibbley
