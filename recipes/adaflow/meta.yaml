# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
  # https://github.com/conda-incubator/grayskull

  # Jinja variables help maintain the recipe as you'll update the version only here.
  # Using the name variable with the URL in line 14 is convenient
  # when copying and pasting from another recipe, but not really needed.
  {% set name = "adaflow" %}
  {% set version = "v0.0.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
#  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  url: https://github.com/modelscope/AdaFlow/archive/refs/tags/{{ version }}.tar.gz
  # If getting the source from GitHub, remove the line above,
  # uncomment the line below, and modify as needed. Use releases if available:
  # url: https://github.com/simplejson/simplejson/releases/download/{{ version }}/simplejson-{{ version }}.tar.gz
  # and otherwise fall back to archive:
  # url: https://github.com/simplejson/simplejson/archive/v{{ version }}.tar.gz
  sha256: 6122069e2994b84e03a2bca593b44b4caaa5be90ded13f4e4f134925e25d4c29
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  # More info about selectors can be found in the conda-build docs:
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
#  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  build:
    - sysroot_linux-64 2.17  # [linux64]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - pkg-config
    - python
    - setuptools
    - cmake
    - make
    - ninja
    - meson
  host:
    - glib
    - gstreamer 1.22.0
    - gst-plugins-base 1.22.0
    - gst-plugins-good 1.22.0
    - gst-plugins-bad 1.22.0
    - gst-plugins-ugly  1.22.0
    - gst-python  1.22.0
  run:
    - {{ pin_compatible("glib") }}


test:
  commands:
    - "test -f $PREFIX/lib/libflowmetadata.so"
    - "test -f $PREFIX/lib/gstreamer-1.0/libflow_gst_plugin.so"

# test:
#  # Some packages might need a `test/commands` key to check CLI.
#  # List all the packages/modules that `run_test.py` imports.
#  imports:
#    - simplejson
#    - simplejson.tests
#  # For python packages, it is useful to run pip check. However, sometimes the
#  # metadata used by pip is out of date. Thus this section is optional if it is
#  # failing.
#  requires:
#    - pip
#  commands:
#    - pip checkc

about:
  home: "https://github.com/modelscope/AdaFlow"
  license: Apache-2.0
  license_file: LICENSE
  summary: "AdaFlow: Pipeline Frameworks for Deep-Learning Applications"

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - robinqu
