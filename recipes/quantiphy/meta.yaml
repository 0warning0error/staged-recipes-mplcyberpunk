# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "quantiphy" %}
{% set version = "2.19" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: 9dc004a1047948a6e50d783f6f443e1e4d988fc1a44ca1d2b4821d1e96fb935a
  # sha256 is the preferred checksum -- you can get it for a file with:
  #  `openssl sha256 <file name>`.
  # You may need the openssl package, available on conda-forge:
  #  `conda install openssl -c conda-forge``

build:
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv
  number: 0

requirements:
  host:
    - python
    - pip
  run:
    - python

test:
  imports:
    - quantiphy
  requires:
    - pip
  commands:
    - pip check

about:
  home: https://quantiphy.readthedocs.io/
  summary: 'QuantiPhy is a Python library that offers support for physical quantities'
  description: |
    Author - Ken Kundert
    QuantiPhy is a Python library that offers support for physical quantities.
    A quantity is the pairing of a number and a unit of measure that indicates
    the amount of some measurable thing. QuantiPhy provides quantity objects
    that keep the units with the number, making it easy to share them as single
    object. They subclass float and so can be used anywhere a real number is
    appropriate.
  license: MIT
  license_family: MIT
  license_file: LICENSE.txt
  doc_url: https://quantiphy.readthedocs.io/
  dev_url: https://github.com/kenkundert/quantiphy

extra:
  recipe-maintainers:
    - danielbrown2
