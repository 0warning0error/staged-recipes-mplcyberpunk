{% set version = "0.1.0" %}

package:
  name: arrow-adbc-split
  version: {{ version }}

source:
  url: https://dist.apache.org/repos/dist/release/arrow/apache-arrow-adbc-{{ version }}/apache-arrow-adbc-{{ version }}.tar.gz
  sha256: a50f3dac985883042152938bdd69c843708fd50508e0f15ba3a179619c11f7b9
  patches:
    # Backport https://github.com/apache/arrow-adbc/issues/304, drop in 0.2.0
    - patches/0001-fix-c-driver-postgresql-define-ntohll-etc-for-macOS.patch

build:
  number: 0

outputs:
  - name: adbc-driver-manager-cpp
    script: build-cpp.sh                                                         # [not win]
    script: build-cpp.bat                                                        # [win]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      host:
      run:
    test:
      commands:
        - test -f $PREFIX/include/adbc.h                                         # [unix]
        - test -f $PREFIX/include/adbc_driver_manager.h                          # [unix]
        - test -d $PREFIX/lib/cmake/AdbcDriverManager/                           # [unix]
        - test -f $PREFIX/lib/pkgconfig/adbc-driver-manager.pc                   # [unix]
        - test ! -f $PREFIX/lib/libadbc_driver_manager.a                         # [unix]
        - test -f $PREFIX/lib/libadbc_driver_manager.so                          # [linux]
        - test -f $PREFIX/lib/libadbc_driver_manager.dylib                       # [osx]

        - if not exist %LIBRARY_BIN%\adbc_driver_manager.dll exit 1              # [win]
        - if not exist %LIBRARY_INC%\adbc.h exit 1                               # [win]
        - if not exist %LIBRARY_INC%\adbc_driver_manager.h exit 1                # [win]
        - if not exist %LIBRARY_LIB%\adbc_driver_manager.lib exit 1              # [win]
        - if not exist %LIBRARY_LIB%\cmake\AdbcDriverManager exit 1              # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig\adbc-driver-manager.pc exit 1     # [win]

  - name: adbc-driver-postgresql-cpp
    script: build-cpp.sh                                                         # [not win]
    script: build-cpp.bat                                                        # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - pkg-config
      host:
        - libpq
      run:
        - libpq
    test:
      commands:
        - test ! -f $PREFIX/include/adbc.h                                       # [unix]
        - test -d $PREFIX/lib/cmake/AdbcDriverPostgreSQL/                        # [unix]
        - test -f $PREFIX/lib/pkgconfig/adbc-driver-postgresql.pc                # [unix]
        - test ! -f $PREFIX/lib/libadbc_driver_postgresql.a                      # [unix]
        - test -f $PREFIX/lib/libadbc_driver_postgresql.so                       # [linux]
        - test -f $PREFIX/lib/libadbc_driver_postgresql.dylib                    # [osx]

        - if exist %LIBRARY_INC%\adbc.h exit 1                                   # [win]
        - if not exist %LIBRARY_BIN%\adbc_driver_postgresql.dll exit 1           # [win]
        - if not exist %LIBRARY_LIB%\adbc_driver_postgresql.lib exit 1           # [win]
        - if not exist %LIBRARY_LIB%\cmake\AdbcDriverPostgreSQL exit 1           # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig\adbc-driver-postgresql.pc exit 1  # [win]

  - name: adbc-driver-sqlite-cpp
    script: build-cpp.sh                                                         # [not win]
    script: build-cpp.bat                                                        # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - pkg-config
      host:
        - libsqlite
      run:
        - libsqlite
    test:
      commands:
        - test ! -f $PREFIX/include/adbc.h                                       # [unix]
        - test -d $PREFIX/lib/cmake/AdbcDriverSQLite/                            # [unix]
        - test -f $PREFIX/lib/pkgconfig/adbc-driver-sqlite.pc                    # [unix]
        - test ! -f $PREFIX/lib/libadbc_driver_sqlite.a                          # [unix]
        - test -f $PREFIX/lib/libadbc_driver_sqlite.so                           # [linux]
        - test -f $PREFIX/lib/libadbc_driver_sqlite.dylib                        # [osx]

        - if exist %LIBRARY_INC%\adbc.h exit 1                                   # [win]
        - if not exist %LIBRARY_BIN%\adbc_driver_sqlite.dll exit 1               # [win]
        - if not exist %LIBRARY_LIB%\adbc_driver_sqlite.lib exit 1               # [win]
        - if not exist %LIBRARY_LIB%\cmake\AdbcDriverSQLite exit 1               # [win]
        - if not exist %LIBRARY_LIB%\pkgconfig\adbc-driver-sqlite.pc exit 1      # [win]

  - name: adbc-driver-manager
    script: build-python.sh                                                      # [not win]
    script: build-python.bat                                                     # [win]
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cross-python_{{ target_platform }}                                     # [build_platform != target_platform]
        - cython
        - pip
        - poetry
        - setuptools
      host:
        - cython
        - pip
        - python >=3.9
        - setuptools
      run:
        - python
      run_constrained:
        - pyarrow >=8.0.0
    test:
      imports:
        - adbc_driver_manager
        - adbc_driver_manager._lib

  - name: adbc-driver-postgresql
    script: build-python.sh                                                      # [not win]
    script: build-python.bat                                                     # [win]
    requirements:
      build:
        # We don't use these, but Conda needs them to know that this is a binary package.
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cross-python_{{ target_platform }}                                     # [build_platform != target_platform]
        - pip
        - setuptools
        - python
      host:
        - {{ pin_subpackage('adbc-driver-postgresql-cpp', exact=True) }}
        - pip
        - python >=3.9
        - setuptools
      run:
        - {{ pin_subpackage('adbc-driver-manager') }}
        - {{ pin_subpackage('adbc-driver-postgresql-cpp', exact=True) }}
        - libpq
        - python
      run_constrained:
        - pyarrow >=8.0.0
    test:
      imports:
        - adbc_driver_postgresql

  - name: adbc-driver-sqlite
    script: build-python.sh                                                      # [not win]
    script: build-python.bat                                                     # [win]
    requirements:
      build:
        # We don't use these, but Conda needs them to know that this is a binary package.
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cross-python_{{ target_platform }}                                     # [build_platform != target_platform]
        - pip
        - setuptools
        - python
      host:
        - {{ pin_subpackage('adbc-driver-sqlite-cpp', exact=True) }}
        - pip
        - python >=3.9
        - setuptools
      run:
        - {{ pin_subpackage('adbc-driver-manager') }}
        - {{ pin_subpackage('adbc-driver-sqlite-cpp', exact=True) }}
        - libsqlite
        - python
      run_constrained:
        - pyarrow >=8.0.0
    test:
      imports:
        - adbc_driver_sqlite

about:
  home: https://arrow.apache.org
  summary: 'Database access libraries for Apache Arrow'
  description: |
    ADBC is an API standard for database access libraries ("drivers")
    in C and Java that uses Arrow for data. Instead of writing code
    for each individual database, applications can build against the
    ADBC APIs, and link against drivers that implement the
    standard. Additionally, a JDBC/ODBC-style driver manager is
    provided. This also implements the ADBC APIs, but dynamically
    loads drivers and dispatches calls to them.
  license: Apache-2.0
  license_family: APACHE
  license_file: LICENSE.txt
  doc_url: https://arrow.apache.org/docs/
  dev_url: https://github.com/apache/arrow-adbc

extra:
  recipe-maintainers:
    - lidavidm
