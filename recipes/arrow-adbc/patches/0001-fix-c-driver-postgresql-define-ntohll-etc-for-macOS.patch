From 5855964a53ae4d27a94f419a7061faa8feca5f2c Mon Sep 17 00:00:00 2001
From: David Li <li.davidm96@gmail.com>
Date: Fri, 30 Dec 2022 08:20:34 -0500
Subject: [PATCH] fix(c/driver/postgresql): define ntohll etc for macOS 10.9
 (#305)

Fixes #304.
---
 c/driver/postgresql/util.h | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

diff --git a/c/driver/postgresql/util.h b/c/driver/postgresql/util.h
index 69a48c4..fb12aec 100644
--- a/c/driver/postgresql/util.h
+++ b/c/driver/postgresql/util.h
@@ -29,6 +29,8 @@
 
 #if defined(__linux__)
 #include <endian.h>
+#elif defined(__APPLE__)
+#include <libkern/OSByteOrder.h>
 #endif
 
 #include "adbc.h"
@@ -38,9 +40,15 @@ namespace adbcpq {
 #define CONCAT(x, y) x##y
 #define MAKE_NAME(x, y) CONCAT(x, y)
 
-#if defined(__linux__)
-static inline uint64_t ntohll(uint64_t x) { return be64toh(x); }
-static inline uint64_t htonll(uint64_t x) { return htobe64(x); }
+#if defined(_WIN32)
+static inline uint64_t SwapNetworkToHost(uint64_t x) { return ntohll(x); }
+static inline uint64_t SwapHostToNetwork(uint64_t x) { return htonll(x); }
+#elif defined(__APPLE__)
+static inline uint64_t SwapNetworkToHost(uint64_t x) { return OSSwapBigToHostInt64(x); }
+static inline uint64_t SwapHostToNetwork(uint64_t x) { return OSSwapHostToBigInt64(x); }
+#else
+static inline uint64_t SwapNetworkToHost(uint64_t x) { return be64toh(x); }
+static inline uint64_t SwapHostToNetwork(uint64_t x) { return htobe64(x); }
 #endif
 
 // see arrow/util/string_builder.h
@@ -127,7 +135,7 @@ static inline uint32_t LoadNetworkUInt32(const char* buf) {
 static inline int64_t LoadNetworkUInt64(const char* buf) {
   uint64_t v = 0;
   std::memcpy(&v, buf, sizeof(uint64_t));
-  return ntohll(v);
+  return SwapNetworkToHost(v);
 }
 
 static inline int32_t LoadNetworkInt32(const char* buf) {
@@ -139,7 +147,7 @@ static inline int64_t LoadNetworkInt64(const char* buf) {
 }
 
 static inline uint64_t ToNetworkInt64(int64_t v) {
-  return htonll(static_cast<uint64_t>(v));
+  return SwapHostToNetwork(static_cast<uint64_t>(v));
 }
 
 }  // namespace adbcpq
-- 
2.30.0

