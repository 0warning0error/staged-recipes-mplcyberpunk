{% set name = "libefp" %}
{% set libefp_version = "1.5.0" %}
{% set version = "0.6.1" %}
#{% set sha256 = "04dcfbdb89ab0d9ae05d8534c46edf4f9ba60dd6b7633ce72f6cb3c9773bb344" %}

package:
  name: {{ name|lower }}-split
  version: {{ version }}

source:
  url: https://github.com/loriab/pylibefp/archive/cf.tar.gz
  #url: https://github.com/loriab/pylibefp/archive/v{{ version}}.tar.gz
  # note above accesses https://github.com/libefp2/libefp/archive/15cd7ce.tar.gz  # v1.5.0 + 10 (docs and a cmake lapack patch)
#  sha256: {{ sha256 }}

build:
  number: 0
  binary_relocation: true

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make  # [unix]
    - ninja
  host:
    - python
    - pybind11
    - qcelemental
    - mkl-devel {{ mkl }}

outputs:
  - name: libefp-c
    version: {{ libefp_version }}
    build:
      run_exports:
        - {{ pin_subpackage('libefp-c', max_pin='x.x') }}
    requirements:
      build:
        - {{ compiler('c') }}
        - cmake
        - make  # [unix]
        - ninja
      host:
        - mkl-devel {{ mkl }}
      run:
        - libblas * *mkl
        - mkl {{ mkl }}
    files:
      - include/efp.h               # [unix]
      - include/libefp/*            # [unix]
      - lib/libefp{{ SHLIB_EXT }}*  # [linux]
      - lib/libefp.*dylib           # [osx]
      - share/cmake/libefp/*        # [unix]
      - share/libefp/*              # [unix]
      - share/libefp/fraglib/*      # [unix]
      - Library/include/efp.h       # [win]
      - Library/include/libefp/*    # [win]
      - Library/lib/efp*            # [win]
      - Library/share/cmake/libefp  # [win]
    test:
      commands:
        - ls -l $PREFIX/lib                                      # [unix]
        - ls -l $PREFIX/share/cmake/libefp                       # [unix]
        - dir "%PREFIX%\Library"                                 # [win]
        - dir "%PREFIX%"\Library\include                         # [win]
        # Verify library
        - test -f $PREFIX/lib/libefp$SHLIB_EXT                   # [unix]
        - test ! -f $PREFIX/lib/libefp.a                         # [unix]
        - if not exist %PREFIX%\\Library\\lib\\efp.lib exit 1    # [win]
        - if not exist %PREFIX%\\Library\\bin\\efp.dll exit 1    # [win]
        # Verify accessories
        - test -f $PREFIX/include/libefp/efp.h                   # [unix]
        - test -f $PREFIX/share/cmake/libefp/libefpConfig.cmake  # [unix]
        - test -f $PREFIX/share/libefp/fraglib/h2.efp            # [unix]
        - if not exist %PREFIX%\\Library\\include\\libefp\\efp.h exit 1  # [win]
        - if not exist %PREFIX%\\Library\\share\\cmake\\libefp\\libefpConfig.cmake exit 1  # [win]
        - if not exist %PREFIX%\\Library\\share\\libefp\\fraglib\\h2.efp exit 1  # [win]
        # Inspect linkage
        - ldd -v $PREFIX/lib/libefp$SHLIB_EXT                    # [linux and build_platform == target_platform]
        - otool -L $PREFIX/lib/libefp$SHLIB_EXT                  # [osx]

  - name: pylibefp
    version: {{ version }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      host:
        - {{ pin_subpackage('libefp-c', exact=True) }}
        - python
        - pybind11
        - qcelemental
        - mkl-devel {{ mkl }}    
      run:
        - {{ pin_subpackage('libefp-c', exact=True) }}
        - python
        - {{ pin_compatible('qcelemental', max_pin='x') }}
        - libblas * *mkl
        - mkl {{ mkl }}
    files:
      - lib/python{{ PY_VER }}/site-packages/pylibefp       # [unix]
      - share/cmake/pylibefp/*                              # [unix]
      - Lib/site-packages/pylibefp/*                        # [win]
      - Library/share/cmake/libefp                          # [win]
    test:
      requires:
        - numpy
        - pytest
      imports:
        - pylibefp
      commands:
        - ls -l $SP_DIR/pylibxc                                   # [unix]
        - dir %SP_DIR%\pylibxc                                    # [win]
        - export PYLIB_EXT=`$PYTHON -c 'import sysconfig as s; print(s.get_config_var("EXT_SUFFIX"))'`
        # Verify module
        - test -f $SP_DIR/pylibefp/core$PYLIB_EXT                 # [unix]
        - if not exist %SP_DIR%\\pylibefp\\core$PYLIB_EXT exit 1  # [win]
        # Inspect linkage
        - ldd -v $SP_DIR/pylibefp/core$PYLIB_EXT                  # [linux]
        - otool -L $SP_DIR/pylibefp/core$PYLIB_EXT                # [osx]
        # Actually test
        - python -c "import pylibefp; assert pylibefp.test() == 0"
    about:
      home: https://github.com/loriab/pylibefp
      dev_url: https://github.com/loriab/pylibefp/blob/master/README.md
      # doc_url:
      doc_source_url: https://github.com/loriab/pylibefp/blob/master/doc/source/introduction.rst
      license: BSD-3-Clause
      license_url: https://opensource.org/licenses/BSD-3-Clause
      license_file: LICENSE
      license_family: BSD
      summary: "L. A. Burns's python bindings to libefp"
      # description: >

about:
  home: https://github.com/libefp2/libefp
  dev_url: https://github.com/libefp2/libefp/blob/master/README.md
  doc_url: https://libefp2.github.io/doxygen_html/index.html
  # doc_source_url:
  license: BSD-2-Clause
  license_url: https://opensource.org/licenses/BSD-2-Clause
  license_file: LICENSE
  license_family: BSD
  summary: "I. Kaliman and L. Slipchenko's parallel implementation of the Effective Fragment Potential (EFP) method"
  # description: >

extra:
  feedstock-name: libefp
  recipe-maintainers:
    - loriab
