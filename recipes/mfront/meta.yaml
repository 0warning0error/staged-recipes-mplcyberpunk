{% set name = "mfront" %}
{% set version = "3.2.1" %}
{% set sha256 = "12786480524a7fe86889120fb334fa00211dfd44ad5ec71e2279e7adf1ddc807" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: {{ name }}_{{ version }}.tar.gz
  url: https://github.com/thelfer/tfel/archive/refs/tags/TFEL-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  skip: true  # [py2k or osx or win or (python_impl == 'pypy')]
  detect_binary_files_with_prefix: True
  ignore_run_exports:
    - gettext
    - numpy
    - libgomp
    - boost
    - python
  run_exports:
    - {{ pin_subpackage('mfront', max_pin='x.x.x') }}

requirements:
  build:
    - gcc 8  # [linux]
    - gxx 8  # [linux]
    - gfortran 8  # [linux]
    - sysroot_linux-64 =2.17  # [linux]
  host:
    - cmake  
    - make  # [not win]
    - ninja  # [win]
    - boost 1.75
    - python 3.8
    - numpy 1.20
    - libgomp  # [linux]
  run:
    - python 3.8
    - {{ pin_compatible('python', max_pin='x.x') }}
    - {{ pin_compatible('numpy', max_pin='x.x') }}
    - {{ pin_compatible('boost', max_pin='x.x') }}
    - libgomp  # [linux]
    - libzlib  # [linux]
    - libstdcxx-ng  # [linux]
    - libgcc-ng  # [linux]

test:
  commands:
    - $PREFIX/bin/tfel-config --version
    - $PREFIX/bin/tfel-doc --version
    - $PREFIX/bin/tfel-check --version
    - $PREFIX/bin/mtest --version
    - $PREFIX/bin/mfront --version
    - $PREFIX/bin/mfront-doc --version
    - $PREFIX/bin/mfront-query --version
    - $PREFIX/bin/mfm --version
    - test -f $PREFIX/lib/libTFELConfig.so  # [linux]
    - test -f $PREFIX/lib/libTFELPhysicalConstants.so  # [linux]
    - test -f $PREFIX/lib/libTFELException.so  # [linux]
    - test -f $PREFIX/lib/libTFELUtilities.so  # [linux]

#  imports:
#    - tfel

about:
  home: http://tfel.sourceforge.net
  license: GPL-3.0-only
  license_family: GPL
  license_file: LICENCE-GNU-GPL
  summary: 'MFront, a code generation tool dedicated to material knowledge'
  description: |
    MFront is a code generator which translates a set of closely related domain specific languages into plain C++ on top of the TFEL library. Those languages cover three kinds of material knowledge:
    material properties (for instance the Young modulus, the thermal conductivity, etc.)
    mechanical behaviours. Numerical performances of generated mechanical behaviours were given a particular attention. Various benchmarks show that MFront implementations are competitive with native implementations available in the Cast3M, Code-Aster, Abaqus Standard and Cyrano3 solvers.
    simple point-wise models, such as material swelling used in fuel performance codes.
  doc_url: http://tfel.sourceforge.net/documentations.html
  dev_url: http://tfel.sourceforge.net/devel.html

extra:
  recipe-maintainers:
    - ldallolio
