diff --git a/setup.py b/setup.py
index 9a1e2ae..b80c479 100644
--- a/setup.py
+++ b/setup.py
@@ -65,11 +65,9 @@ if not os.getenv("READTHEDOCS"):
             cfg = "Debug" if debug else "Release"
             ninja_path = str(shutil.which("ninja"))
 
-            # Set Python_EXECUTABLE instead if you use PYBIND11_FINDPYTHON
             configure_args = [
                 "-DCMAKE_CXX_FLAGS=-fno-lto",
                 f"-DCMAKE_LIBRARY_OUTPUT_DIRECTORY={extdir}",
-                f"-DPYTHON_EXECUTABLE={sys.executable}",
                 f"-DCMAKE_BUILD_TYPE={cfg}",  # not used on MSVC, but no harm
                 *(self.cmake_defines),
             ]
@@ -99,29 +97,7 @@ if not os.getenv("READTHEDOCS"):
                     configure_args.append(f"-DKokkos_ARCH_{self.arch}=ON")
 
             # Add more platform dependent options
-            if platform.system() == "Darwin":
-                # To support ARM64
-                if os.getenv("ARCHS") == "arm64":
-                    configure_args += [
-                        "-DCMAKE_CXX_COMPILER_TARGET=arm64-apple-macos11",
-                        "-DCMAKE_SYSTEM_NAME=Darwin",
-                        "-DCMAKE_SYSTEM_PROCESSOR=ARM64",
-                    ]
-                else:  # X64 arch
-                    if shutil.which("brew"):
-                        llvmpath = (
-                            subprocess.check_output(["brew", "--prefix", "llvm"]).decode().strip()
-                        )
-                    else:
-                        llvmpath = shutil.which("clang++")
-                        llvmpath = Path(llvmpath).parent.parent
-                    configure_args += [
-                        f"-DCMAKE_CXX_COMPILER={llvmpath}/bin/clang++",
-                        f"-DCMAKE_LINKER={llvmpath}/bin/lld",
-                    ]  # Use clang instead of appleclang
-                # Disable OpenMP in M1 Macs
-                configure_args += ["-DKokkos_ENABLE_OPENMP=OFF"]
-            elif platform.system() == "Windows":
+            if platform.system() == "Windows":
                 configure_args += [
                     "-DKokkos_ENABLE_OPENMP=OFF"
                 ]  # only build with Clang under Windows
@@ -135,9 +111,18 @@ if not os.getenv("READTHEDOCS"):
                 os.makedirs(self.build_temp)
 
             subprocess.check_call(
-                ["cmake", str(ext.sourcedir)] + configure_args, cwd=self.build_temp
+                ["cmake"]
+                + os.environ["CMAKE_ARGS"].split(" ")
+                + [str(ext.sourcedir)]
+                + configure_args,
+                cwd=self.build_temp,
+                env=os.environ,
+            )
+            subprocess.check_call(
+                ["cmake", "--build", ".", "--verbose"] + build_args,
+                cwd=self.build_temp,
+                env=os.environ,
             )
-            subprocess.check_call(["cmake", "--build", "."] + build_args, cwd=self.build_temp)
 
 
 with open("pennylane_lightning_kokkos/_version.py") as f:
