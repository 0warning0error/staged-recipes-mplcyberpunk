{% set name = "libcufile" %}
{% set version = "1.5.0.59" %}
 {% set platform = "linux-x86_64" %}  # [linux64]
 {% set platform = "linux-sbsa" %}  # [aarch64]
 {% set extension = "tar.xz" %}  # [not win]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/{{ name }}/{{ platform }}/{{ name }}-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: 222c49b29afb544c69542c4e658b0a1bd01fd2306f2136ad6990ccfff482a097  # [linux64]
  patches:
    - Makefile.patch

build:
  # uncomment the following line if the package is pure python and the recipe is exactly the same for all platforms.
  # it is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # see https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  # if the installation is complex, or different between unix and windows, use separate bld.bat and build.sh files instead of this key.
  # by default, the package will be built for the python versions supported by conda-forge and for all major oss.
  # add the line "skip: true  # [py<35]" (for example) to limit to python 3.5 and newer, or "skip: true  # [not win]" to limit to windows.
  # more info about selectors can be found in the conda-build docs: 
  # https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#preprocessing-selectors
  #script: {{ python }} -m pip install . -vv
  number: 0
  skip: true  # [osx]
  skip: true  # [ppc64le]
  skip: true  # [aarch64]
  skip: true  # [win]

outputs:
  - name: libcufile
    files:
      - lib/libcufile*.so.*
      - etc/cufile.json
    test:
      commands:
        - test -f $PREFIX/lib/libcufile*.so.*
        - test -f $PREFIX/etc/cufile.json

  - name: libcufile-dev
    requirements:
      run:
        - libcufile >={{ version }}
    files:
      - lib/libcufile*.so
      - include/cufile*
      - man
    test:
      commands:
        - test -f $PREFIX/lib/libcufile*.so
        - test -f $PREFIX/include/cufile*
        - test -f $PREFIX/man

  - name: libcufile-static
    requirements:
      run:
        - libcufile-dev >={{ version }}
    files:
      - lib/libcufile*_static.a
      - targets/*/lib/libcufile*_static.a
    test:
      commands:
        - test -f $PREFIX/lib/libcufile*_static.a

  - name: gds-tools
    requirements:
      run:
        - libcufile >={{ version }}
    files:
      - gds/samples
      - gds/tools
    test:
      commands:
        - test -f $PREFIX/gds/samples
        - test -f $PREFIX/gds/tools

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_file: LICENSE
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: |
    Library for GPU Direct Storage with CUDA
  doc_url: https://docs.nvidia.com/gpudirect-storage/api-reference-guide/index.html

extra:
  recipe-maintainers:
    - adibbley
